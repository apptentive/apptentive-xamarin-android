//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Apptentive.Com.Android.Platform {

	// Metadata.xml XPath class reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']"
	[global::Android.Runtime.Register ("apptentive/com/android/platform/DefaultAndroidSharedPrefDataStore", DoNotGenerateAcw=true)]
	public sealed partial class DefaultAndroidSharedPrefDataStore : global::Java.Lang.Object, global::Apptentive.Com.Android.Platform.IAndroidSharedPrefDataStore {
		static readonly JniPeerMembers _members = new XAPeerMembers ("apptentive/com/android/platform/DefaultAndroidSharedPrefDataStore", typeof (DefaultAndroidSharedPrefDataStore));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal DefaultAndroidSharedPrefDataStore (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/constructor[@name='DefaultAndroidSharedPrefDataStore' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register (".ctor", "(Landroid/content/Context;)V", "")]
		public unsafe DefaultAndroidSharedPrefDataStore (global::Android.Content.Context context) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

		public unsafe global::Android.Content.Context Context {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='getContext' and count(parameter)=0]"
			[Register ("getContext", "()Landroid/content/Context;", "")]
			get {
				const string __id = "getContext.()Landroid/content/Context;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Content.Context> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='containsKey' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("containsKey", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
		public unsafe bool ContainsKey (string file, string keyEntry)
		{
			const string __id = "containsKey.(Ljava/lang/String;Ljava/lang/String;)Z";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			IntPtr native_keyEntry = JNIEnv.NewString ((string)keyEntry);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_keyEntry);
				var __rm = _members.InstanceMethods.InvokeAbstractBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_keyEntry);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='getBoolean' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
		[Register ("getBoolean", "(Ljava/lang/String;Ljava/lang/String;Z)Z", "")]
		public unsafe bool GetBoolean (string file, string keyEntry, bool defaultValue)
		{
			const string __id = "getBoolean.(Ljava/lang/String;Ljava/lang/String;Z)Z";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			IntPtr native_keyEntry = JNIEnv.NewString ((string)keyEntry);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_keyEntry);
				__args [2] = new JniArgumentValue (defaultValue);
				var __rm = _members.InstanceMethods.InvokeAbstractBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_keyEntry);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='getSharedPrefForSDK' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("getSharedPrefForSDK", "(Ljava/lang/String;)Landroid/content/SharedPreferences;", "")]
		public unsafe global::Android.Content.ISharedPreferences GetSharedPrefForSDK (string file)
		{
			const string __id = "getSharedPrefForSDK.(Ljava/lang/String;)Landroid/content/SharedPreferences;";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_file);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Content.ISharedPreferences> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='getString' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("getString", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public unsafe string GetString (string file, string keyEntry, string defaultValue)
		{
			const string __id = "getString.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			IntPtr native_keyEntry = JNIEnv.NewString ((string)keyEntry);
			IntPtr native_defaultValue = JNIEnv.NewString ((string)defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_keyEntry);
				__args [2] = new JniArgumentValue (native_defaultValue);
				var __rm = _members.InstanceMethods.InvokeAbstractObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_keyEntry);
				JNIEnv.DeleteLocalRef (native_defaultValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='putBoolean' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
		[Register ("putBoolean", "(Ljava/lang/String;Ljava/lang/String;Z)V", "")]
		public unsafe void PutBoolean (string file, string keyEntry, bool value)
		{
			const string __id = "putBoolean.(Ljava/lang/String;Ljava/lang/String;Z)V";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			IntPtr native_keyEntry = JNIEnv.NewString ((string)keyEntry);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_keyEntry);
				__args [2] = new JniArgumentValue (value);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_keyEntry);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.platform']/class[@name='DefaultAndroidSharedPrefDataStore']/method[@name='putString' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("putString", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "")]
		public unsafe void PutString (string file, string keyEntry, string value)
		{
			const string __id = "putString.(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_file = JNIEnv.NewString ((string)file);
			IntPtr native_keyEntry = JNIEnv.NewString ((string)keyEntry);
			IntPtr native_value = JNIEnv.NewString ((string)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_file);
				__args [1] = new JniArgumentValue (native_keyEntry);
				__args [2] = new JniArgumentValue (native_value);
				_members.InstanceMethods.InvokeAbstractVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_file);
				JNIEnv.DeleteLocalRef (native_keyEntry);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

	}
}
