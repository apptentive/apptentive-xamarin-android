//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Apptentive.Com.Android.Encryption {

	// Metadata.xml XPath class reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']"
	[global::Android.Runtime.Register ("apptentive/com/android/encryption/EncryptionKey", DoNotGenerateAcw=true)]
	public sealed partial class EncryptionKey : global::Java.Lang.Object {
		// Metadata.xml XPath class reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey.Companion']"
		[global::Android.Runtime.Register ("apptentive/com/android/encryption/EncryptionKey$Companion", DoNotGenerateAcw=true)]
		public sealed partial class Companion : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("apptentive/com/android/encryption/EncryptionKey$Companion", typeof (Companion));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			internal Companion (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			public unsafe global::Apptentive.Com.Android.Encryption.EncryptionKey NO_OP {
				// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey.Companion']/method[@name='getNO_OP' and count(parameter)=0]"
				[Register ("getNO_OP", "()Lapptentive/com/android/encryption/EncryptionKey;", "")]
				get {
					const string __id = "getNO_OP.()Lapptentive/com/android/encryption/EncryptionKey;";
					try {
						var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Apptentive.Com.Android.Encryption.EncryptionKey> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("apptentive/com/android/encryption/EncryptionKey", typeof (EncryptionKey));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal EncryptionKey (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/constructor[@name='EncryptionKey' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe EncryptionKey () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/constructor[@name='EncryptionKey' and count(parameter)=2 and parameter[1][@type='javax.crypto.SecretKey'] and parameter[2][@type='java.lang.String']]"
		[Register (".ctor", "(Ljavax/crypto/SecretKey;Ljava/lang/String;)V", "")]
		public unsafe EncryptionKey (global::Javax.Crypto.ISecretKey key, string transformation) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljavax/crypto/SecretKey;Ljava/lang/String;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_transformation = JNIEnv.NewString ((string)transformation);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((key == null) ? IntPtr.Zero : ((global::Java.Lang.Object) key).Handle);
				__args [1] = new JniArgumentValue (native_transformation);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_transformation);
				global::System.GC.KeepAlive (key);
			}
		}

		public unsafe global::Javax.Crypto.ISecretKey Key {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/method[@name='getKey' and count(parameter)=0]"
			[Register ("getKey", "()Ljavax/crypto/SecretKey;", "")]
			get {
				const string __id = "getKey.()Ljavax/crypto/SecretKey;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Javax.Crypto.ISecretKey> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe string Transformation {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/method[@name='getTransformation' and count(parameter)=0]"
			[Register ("getTransformation", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getTransformation.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/method[@name='component1' and count(parameter)=0]"
		[Register ("component1", "()Ljavax/crypto/SecretKey;", "")]
		public unsafe global::Javax.Crypto.ISecretKey Component1 ()
		{
			const string __id = "component1.()Ljavax/crypto/SecretKey;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Javax.Crypto.ISecretKey> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/method[@name='component2' and count(parameter)=0]"
		[Register ("component2", "()Ljava/lang/String;", "")]
		public unsafe string Component2 ()
		{
			const string __id = "component2.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.encryption']/class[@name='EncryptionKey']/method[@name='copy' and count(parameter)=2 and parameter[1][@type='javax.crypto.SecretKey'] and parameter[2][@type='java.lang.String']]"
		[Register ("copy", "(Ljavax/crypto/SecretKey;Ljava/lang/String;)Lapptentive/com/android/encryption/EncryptionKey;", "")]
		public unsafe global::Apptentive.Com.Android.Encryption.EncryptionKey Copy (global::Javax.Crypto.ISecretKey key, string transformation)
		{
			const string __id = "copy.(Ljavax/crypto/SecretKey;Ljava/lang/String;)Lapptentive/com/android/encryption/EncryptionKey;";
			IntPtr native_transformation = JNIEnv.NewString ((string)transformation);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((key == null) ? IntPtr.Zero : ((global::Java.Lang.Object) key).Handle);
				__args [1] = new JniArgumentValue (native_transformation);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Apptentive.Com.Android.Encryption.EncryptionKey> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_transformation);
				global::System.GC.KeepAlive (key);
			}
		}

	}
}
