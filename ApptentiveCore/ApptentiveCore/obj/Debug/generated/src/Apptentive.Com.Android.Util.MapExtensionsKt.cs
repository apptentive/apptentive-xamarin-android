//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Apptentive.Com.Android.Util {

	// Metadata.xml XPath class reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']"
	[global::Android.Runtime.Register ("apptentive/com/android/util/MapExtensionsKt", DoNotGenerateAcw=true)]
	public sealed partial class MapExtensionsKt : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("apptentive/com/android/util/MapExtensionsKt", typeof (MapExtensionsKt));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal MapExtensionsKt (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='getBoolean' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String']]"
		[Register ("getBoolean", "(Ljava/util/Map;Ljava/lang/String;)Z", "")]
		public static unsafe bool GetBoolean (global::System.Collections.Generic.IDictionary<string, object> obj, string key)
		{
			const string __id = "getBoolean.(Ljava/util/Map;Ljava/lang/String;)Z";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='getInt' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String']]"
		[Register ("getInt", "(Ljava/util/Map;Ljava/lang/String;)I", "")]
		public static unsafe int GetInt (global::System.Collections.Generic.IDictionary<string, object> obj, string key)
		{
			const string __id = "getInt.(Ljava/util/Map;Ljava/lang/String;)I";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='getList' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String']]"
		[Register ("getList", "(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;", "")]
		public static unsafe global::System.Collections.Generic.IList<object> GetList (global::System.Collections.Generic.IDictionary<string, object> obj, string key)
		{
			const string __id = "getList.(Ljava/util/Map;Ljava/lang/String;)Ljava/util/List;";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaList<object>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='getMap' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String']]"
		[Register ("getMap", "(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<string, object> GetMap (global::System.Collections.Generic.IDictionary<string, object> obj, string key)
		{
			const string __id = "getMap.(Ljava/util/Map;Ljava/lang/String;)Ljava/util/Map;";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<string, object>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='getString' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String']]"
		[Register ("getString", "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string GetString (global::System.Collections.Generic.IDictionary<string, object> obj, string key)
		{
			const string __id = "getString.(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='optBoolean' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='boolean']]"
		[Register ("optBoolean", "(Ljava/util/Map;Ljava/lang/String;Z)Z", "")]
		public static unsafe bool OptBoolean (global::System.Collections.Generic.IDictionary<string, object> obj, string key, bool defaultValue)
		{
			const string __id = "optBoolean.(Ljava/util/Map;Ljava/lang/String;Z)Z";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				__args [2] = new JniArgumentValue (defaultValue);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='optInt' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='int']]"
		[Register ("optInt", "(Ljava/util/Map;Ljava/lang/String;I)I", "")]
		public static unsafe int OptInt (global::System.Collections.Generic.IDictionary<string, object> obj, string key, int defaultValue)
		{
			const string __id = "optInt.(Ljava/util/Map;Ljava/lang/String;I)I";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				__args [2] = new JniArgumentValue (defaultValue);
				var __rm = _members.StaticMethods.InvokeInt32Method (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (obj);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='optMap' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.util.Map&lt;java.lang.String, ?&gt;']]"
		[Register ("optMap", "(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> OptMap (global::System.Collections.Generic.IDictionary<string, object> obj, string key, global::System.Collections.Generic.IDictionary<string, object> defaultValue)
		{
			const string __id = "optMap.(Ljava/util/Map;Ljava/lang/String;Ljava/util/Map;)Ljava/util/Map;";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_defaultValue = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				__args [2] = new JniArgumentValue (native_defaultValue);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_defaultValue);
				global::System.GC.KeepAlive (obj);
				global::System.GC.KeepAlive (defaultValue);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.util']/class[@name='MapExtensionsKt']/method[@name='optString' and count(parameter)=3 and parameter[1][@type='java.util.Map&lt;java.lang.String, ?&gt;'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
		[Register ("optString", "(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
		public static unsafe string OptString (global::System.Collections.Generic.IDictionary<string, object> obj, string key, string defaultValue)
		{
			const string __id = "optString.(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_obj = global::Android.Runtime.JavaDictionary<string, object>.ToLocalJniHandle (obj);
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_defaultValue = JNIEnv.NewString ((string)defaultValue);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_obj);
				__args [1] = new JniArgumentValue (native_key);
				__args [2] = new JniArgumentValue (native_defaultValue);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_obj);
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_defaultValue);
				global::System.GC.KeepAlive (obj);
			}
		}

	}
}
