//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace ApptentiveKit.Android {

	// Metadata.xml XPath class reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']"
	[global::Android.Runtime.Register ("apptentive/com/android/feedback/Apptentive", DoNotGenerateAcw=true)]
	public sealed partial class Apptentive : global::Java.Lang.Object {
		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='APPTENTIVE_NOTIFICATION_ID']"
		[Register ("APPTENTIVE_NOTIFICATION_ID")]
		public const int ApptentiveNotificationId = (int) 1056;


		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='INSTANCE']"
		[Register ("INSTANCE")]
		public static global::ApptentiveKit.Android.Apptentive Instance {
			get {
				const string __id = "INSTANCE.Lapptentive/com/android/feedback/Apptentive;";

				var __v = _members.StaticFields.GetObjectValue (__id);
				return global::Java.Lang.Object.GetObject<global::ApptentiveKit.Android.Apptentive> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
		}

		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='PUSH_PROVIDER_AMAZON_AWS_SNS']"
		[Register ("PUSH_PROVIDER_AMAZON_AWS_SNS")]
		public const int PushProviderAmazonAwsSns = (int) 3;

		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='PUSH_PROVIDER_APPTENTIVE']"
		[Register ("PUSH_PROVIDER_APPTENTIVE")]
		public const int PushProviderApptentive = (int) 0;

		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='PUSH_PROVIDER_PARSE']"
		[Register ("PUSH_PROVIDER_PARSE")]
		public const int PushProviderParse = (int) 1;

		// Metadata.xml XPath field reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/field[@name='PUSH_PROVIDER_URBAN_AIRSHIP']"
		[Register ("PUSH_PROVIDER_URBAN_AIRSHIP")]
		public const int PushProviderUrbanAirship = (int) 2;

		static readonly JniPeerMembers _members = new XAPeerMembers ("apptentive/com/android/feedback/Apptentive", typeof (Apptentive));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		internal Apptentive (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public unsafe global::ApptentiveKit.Android.IApptentiveActivityInfo ApptentiveActivityCallback {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getApptentiveActivityCallback' and count(parameter)=0]"
			[Register ("getApptentiveActivityCallback", "()Lapptentive/com/android/feedback/ApptentiveActivityInfo;", "")]
			get {
				const string __id = "getApptentiveActivityCallback.()Lapptentive/com/android/feedback/ApptentiveActivityInfo;";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::ApptentiveKit.Android.IApptentiveActivityInfo> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe global::ApptentiveCore.Observable EventNotificationObservable {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getEventNotificationObservable' and count(parameter)=0]"
			[Register ("getEventNotificationObservable", "()Lapptentive/com/android/core/Observable;", "")]
			get {
				const string __id = "getEventNotificationObservable.()Lapptentive/com/android/core/Observable;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::ApptentiveCore.Observable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public unsafe bool IsApptentiveActivityInfoCallbackRegistered {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='isApptentiveActivityInfoCallbackRegistered' and count(parameter)=0]"
			[Register ("isApptentiveActivityInfoCallbackRegistered", "()Z", "")]
			get {
				const string __id = "isApptentiveActivityInfoCallbackRegistered.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe global::ApptentiveCore.Observable MessageCenterNotificationObservable {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getMessageCenterNotificationObservable' and count(parameter)=0]"
			[Register ("getMessageCenterNotificationObservable", "()Lapptentive/com/android/core/Observable;", "")]
			get {
				const string __id = "getMessageCenterNotificationObservable.()Lapptentive/com/android/core/Observable;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::ApptentiveCore.Observable> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		public static unsafe string PersonEmail {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getPersonEmail' and count(parameter)=0]"
			[Register ("getPersonEmail", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getPersonEmail.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='setPersonEmail' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPersonEmail", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setPersonEmail.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public static unsafe string PersonName {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getPersonName' and count(parameter)=0]"
			[Register ("getPersonName", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getPersonName.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='setPersonName' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("setPersonName", "(Ljava/lang/String;)V", "")]
			set {
				const string __id = "setPersonName.(Ljava/lang/String;)V";
				IntPtr native_value = JNIEnv.NewString ((string)value);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_value);
					_members.StaticMethods.InvokeVoidMethod (__id, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		public unsafe bool Registered {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getRegistered' and count(parameter)=0]"
			[Register ("getRegistered", "()Z", "")]
			get {
				const string __id = "getRegistered.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		public static unsafe int UnreadMessageCount {
			// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getUnreadMessageCount' and count(parameter)=0]"
			[Register ("getUnreadMessageCount", "()I", "")]
			get {
				const string __id = "getUnreadMessageCount.()I";
				try {
					var __rm = _members.StaticMethods.InvokeInt32Method (__id, null);
					return __rm;
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomDeviceData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Boolean']]"
		[Register ("addCustomDeviceData", "(Ljava/lang/String;Ljava/lang/Boolean;)V", "")]
		public static unsafe void AddCustomDeviceData (string key, global::Java.Lang.Boolean value)
		{
			const string __id = "addCustomDeviceData.(Ljava/lang/String;Ljava/lang/Boolean;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomDeviceData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Number']]"
		[Register ("addCustomDeviceData", "(Ljava/lang/String;Ljava/lang/Number;)V", "")]
		public static unsafe void AddCustomDeviceData (string key, global::Java.Lang.Number value)
		{
			const string __id = "addCustomDeviceData.(Ljava/lang/String;Ljava/lang/Number;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomDeviceData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("addCustomDeviceData", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void AddCustomDeviceData (string key, string value)
		{
			const string __id = "addCustomDeviceData.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_value = JNIEnv.NewString ((string)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue (native_value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomPersonData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Boolean']]"
		[Register ("addCustomPersonData", "(Ljava/lang/String;Ljava/lang/Boolean;)V", "")]
		public static unsafe void AddCustomPersonData (string key, global::Java.Lang.Boolean value)
		{
			const string __id = "addCustomPersonData.(Ljava/lang/String;Ljava/lang/Boolean;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomPersonData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.Number']]"
		[Register ("addCustomPersonData", "(Ljava/lang/String;Ljava/lang/Number;)V", "")]
		public static unsafe void AddCustomPersonData (string key, global::Java.Lang.Number value)
		{
			const string __id = "addCustomPersonData.(Ljava/lang/String;Ljava/lang/Number;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue ((value == null) ? IntPtr.Zero : ((global::Java.Lang.Object) value).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				global::System.GC.KeepAlive (value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='addCustomPersonData' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("addCustomPersonData", "(Ljava/lang/String;Ljava/lang/String;)V", "")]
		public static unsafe void AddCustomPersonData (string key, string value)
		{
			const string __id = "addCustomPersonData.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			IntPtr native_value = JNIEnv.NewString ((string)value);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_key);
				__args [1] = new JniArgumentValue (native_value);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
				JNIEnv.DeleteLocalRef (native_value);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='buildPendingIntentFromPushNotification' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='apptentive.com.android.feedback.PendingIntentCallback'] and parameter[3][@type='android.content.Intent']]"
		[Register ("buildPendingIntentFromPushNotification", "(Landroid/content/Context;Lapptentive/com/android/feedback/PendingIntentCallback;Landroid/content/Intent;)V", "")]
		public unsafe void BuildPendingIntentFromPushNotification (global::Android.Content.Context context, global::ApptentiveKit.Android.IPendingIntentCallback @callback, global::Android.Content.Intent intent)
		{
			const string __id = "buildPendingIntentFromPushNotification.(Landroid/content/Context;Lapptentive/com/android/feedback/PendingIntentCallback;Landroid/content/Intent;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				__args [2] = new JniArgumentValue ((intent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) intent).Handle);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (@callback);
				global::System.GC.KeepAlive (intent);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='buildPendingIntentFromPushNotification' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='apptentive.com.android.feedback.PendingIntentCallback'] and parameter[3][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("buildPendingIntentFromPushNotification", "(Landroid/content/Context;Lapptentive/com/android/feedback/PendingIntentCallback;Ljava/util/Map;)V", "")]
		public unsafe void BuildPendingIntentFromPushNotification (global::Android.Content.Context context, global::ApptentiveKit.Android.IPendingIntentCallback @callback, global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "buildPendingIntentFromPushNotification.(Landroid/content/Context;Lapptentive/com/android/feedback/PendingIntentCallback;Ljava/util/Map;)V";
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				__args [2] = new JniArgumentValue (native_data);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (@callback);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='canShowInteraction' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("canShowInteraction", "(Ljava/lang/String;)Z", "")]
		public static unsafe bool CanShowInteraction (string eventName)
		{
			const string __id = "canShowInteraction.(Ljava/lang/String;)Z";
			IntPtr native_eventName = JNIEnv.NewString ((string)eventName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_eventName);
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_eventName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='canShowMessageCenter' and count(parameter)=0]"
		[Register ("canShowMessageCenter", "()Z", "")]
		public static unsafe bool CanShowMessageCenter ()
		{
			const string __id = "canShowMessageCenter.()Z";
			try {
				var __rm = _members.StaticMethods.InvokeBooleanMethod (__id, null);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='canShowMessageCenter' and count(parameter)=1 and parameter[1][@type='apptentive.com.android.feedback.BooleanCallback']]"
		[Register ("canShowMessageCenter", "(Lapptentive/com/android/feedback/BooleanCallback;)V", "")]
		public static unsafe void CanShowMessageCenter (global::ApptentiveKit.Android.IBooleanCallback @callback)
		{
			const string __id = "canShowMessageCenter.(Lapptentive/com/android/feedback/BooleanCallback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='engage' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("engage", "(Ljava/lang/String;)V", "")]
		public static unsafe void Engage (string eventName)
		{
			const string __id = "engage.(Ljava/lang/String;)V";
			IntPtr native_eventName = JNIEnv.NewString ((string)eventName);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_eventName);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_eventName);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='engage' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, ? extends java.lang.Object&gt;']]"
		[Register ("engage", "(Ljava/lang/String;Ljava/util/Map;)V", "")]
		public static unsafe void Engage (string eventName, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> customData)
		{
			const string __id = "engage.(Ljava/lang/String;Ljava/util/Map;)V";
			IntPtr native_eventName = JNIEnv.NewString ((string)eventName);
			IntPtr native_customData = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (customData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_eventName);
				__args [1] = new JniArgumentValue (native_customData);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_eventName);
				JNIEnv.DeleteLocalRef (native_customData);
				global::System.GC.KeepAlive (customData);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='engage' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.Map&lt;java.lang.String, ? extends java.lang.Object&gt;'] and parameter[3][@type='apptentive.com.android.feedback.EngagementCallback']]"
		[Register ("engage", "(Ljava/lang/String;Ljava/util/Map;Lapptentive/com/android/feedback/EngagementCallback;)V", "")]
		public static unsafe void Engage (string eventName, global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> customData, global::ApptentiveKit.Android.IEngagementCallback @callback)
		{
			const string __id = "engage.(Ljava/lang/String;Ljava/util/Map;Lapptentive/com/android/feedback/EngagementCallback;)V";
			IntPtr native_eventName = JNIEnv.NewString ((string)eventName);
			IntPtr native_customData = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (customData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_eventName);
				__args [1] = new JniArgumentValue (native_customData);
				__args [2] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_eventName);
				JNIEnv.DeleteLocalRef (native_customData);
				global::System.GC.KeepAlive (customData);
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getBodyFromApptentivePush' and count(parameter)=1 and parameter[1][@type='android.content.Intent']]"
		[Register ("getBodyFromApptentivePush", "(Landroid/content/Intent;)Ljava/lang/String;", "")]
		public unsafe string GetBodyFromApptentivePush (global::Android.Content.Intent intent)
		{
			const string __id = "getBodyFromApptentivePush.(Landroid/content/Intent;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((intent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) intent).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (intent);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getBodyFromApptentivePush' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("getBodyFromApptentivePush", "(Landroid/os/Bundle;)Ljava/lang/String;", "")]
		public unsafe string GetBodyFromApptentivePush (global::Android.OS.Bundle bundle)
		{
			const string __id = "getBodyFromApptentivePush.(Landroid/os/Bundle;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((bundle == null) ? IntPtr.Zero : ((global::Java.Lang.Object) bundle).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (bundle);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getBodyFromApptentivePush' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("getBodyFromApptentivePush", "(Ljava/util/Map;)Ljava/lang/String;", "")]
		public unsafe string GetBodyFromApptentivePush (global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "getBodyFromApptentivePush.(Ljava/util/Map;)Ljava/lang/String;";
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getTitleFromApptentivePush' and count(parameter)=1 and parameter[1][@type='android.content.Intent']]"
		[Register ("getTitleFromApptentivePush", "(Landroid/content/Intent;)Ljava/lang/String;", "")]
		public unsafe string GetTitleFromApptentivePush (global::Android.Content.Intent intent)
		{
			const string __id = "getTitleFromApptentivePush.(Landroid/content/Intent;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((intent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) intent).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (intent);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getTitleFromApptentivePush' and count(parameter)=1 and parameter[1][@type='android.os.Bundle']]"
		[Register ("getTitleFromApptentivePush", "(Landroid/os/Bundle;)Ljava/lang/String;", "")]
		public unsafe string GetTitleFromApptentivePush (global::Android.OS.Bundle bundle)
		{
			const string __id = "getTitleFromApptentivePush.(Landroid/os/Bundle;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((bundle == null) ? IntPtr.Zero : ((global::Java.Lang.Object) bundle).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (bundle);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='getTitleFromApptentivePush' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("getTitleFromApptentivePush", "(Ljava/util/Map;)Ljava/lang/String;", "")]
		public unsafe string GetTitleFromApptentivePush (global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "getTitleFromApptentivePush.(Ljava/util/Map;)Ljava/lang/String;";
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='isApptentivePushNotification' and count(parameter)=1 and parameter[1][@type='android.content.Intent']]"
		[Register ("isApptentivePushNotification", "(Landroid/content/Intent;)Z", "")]
		public unsafe bool IsApptentivePushNotification (global::Android.Content.Intent intent)
		{
			const string __id = "isApptentivePushNotification.(Landroid/content/Intent;)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((intent == null) ? IntPtr.Zero : ((global::Java.Lang.Object) intent).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (intent);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='isApptentivePushNotification' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, java.lang.String&gt;']]"
		[Register ("isApptentivePushNotification", "(Ljava/util/Map;)Z", "")]
		public unsafe bool IsApptentivePushNotification (global::System.Collections.Generic.IDictionary<string, string> data)
		{
			const string __id = "isApptentivePushNotification.(Ljava/util/Map;)Z";
			IntPtr native_data = global::Android.Runtime.JavaDictionary<string, string>.ToLocalJniHandle (data);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_data);
				var __rm = _members.InstanceMethods.InvokeNonvirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_data);
				global::System.GC.KeepAlive (data);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='register' and count(parameter)=2 and parameter[1][@type='android.app.Application'] and parameter[2][@type='apptentive.com.android.feedback.ApptentiveConfiguration']]"
		[Register ("register", "(Landroid/app/Application;Lapptentive/com/android/feedback/ApptentiveConfiguration;)V", "")]
		public static unsafe void Register (global::Android.App.Application application, global::ApptentiveKit.Android.ApptentiveConfiguration configuration)
		{
			const string __id = "register.(Landroid/app/Application;Lapptentive/com/android/feedback/ApptentiveConfiguration;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((application == null) ? IntPtr.Zero : ((global::Java.Lang.Object) application).Handle);
				__args [1] = new JniArgumentValue ((configuration == null) ? IntPtr.Zero : ((global::Java.Lang.Object) configuration).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (application);
				global::System.GC.KeepAlive (configuration);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='register' and count(parameter)=3 and parameter[1][@type='android.app.Application'] and parameter[2][@type='apptentive.com.android.feedback.ApptentiveConfiguration'] and parameter[3][@type='apptentive.com.android.feedback.RegisterCallback']]"
		[Register ("register", "(Landroid/app/Application;Lapptentive/com/android/feedback/ApptentiveConfiguration;Lapptentive/com/android/feedback/RegisterCallback;)V", "")]
		public static unsafe void Register (global::Android.App.Application application, global::ApptentiveKit.Android.ApptentiveConfiguration configuration, global::ApptentiveKit.Android.IRegisterCallback @callback)
		{
			const string __id = "register.(Landroid/app/Application;Lapptentive/com/android/feedback/ApptentiveConfiguration;Lapptentive/com/android/feedback/RegisterCallback;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((application == null) ? IntPtr.Zero : ((global::Java.Lang.Object) application).Handle);
				__args [1] = new JniArgumentValue ((configuration == null) ? IntPtr.Zero : ((global::Java.Lang.Object) configuration).Handle);
				__args [2] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (application);
				global::System.GC.KeepAlive (configuration);
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='registerApptentiveActivityInfoCallback' and count(parameter)=1 and parameter[1][@type='apptentive.com.android.feedback.ApptentiveActivityInfo']]"
		[Register ("registerApptentiveActivityInfoCallback", "(Lapptentive/com/android/feedback/ApptentiveActivityInfo;)V", "")]
		public static unsafe void RegisterApptentiveActivityInfoCallback (global::ApptentiveKit.Android.IApptentiveActivityInfo apptentiveActivityInfo)
		{
			const string __id = "registerApptentiveActivityInfoCallback.(Lapptentive/com/android/feedback/ApptentiveActivityInfo;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((apptentiveActivityInfo == null) ? IntPtr.Zero : ((global::Java.Lang.Object) apptentiveActivityInfo).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				global::System.GC.KeepAlive (apptentiveActivityInfo);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='removeCustomDeviceData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeCustomDeviceData", "(Ljava/lang/String;)V", "")]
		public static unsafe void RemoveCustomDeviceData (string key)
		{
			const string __id = "removeCustomDeviceData.(Ljava/lang/String;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_key);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='removeCustomPersonData' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("removeCustomPersonData", "(Ljava/lang/String;)V", "")]
		public static unsafe void RemoveCustomPersonData (string key)
		{
			const string __id = "removeCustomPersonData.(Ljava/lang/String;)V";
			IntPtr native_key = JNIEnv.NewString ((string)key);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_key);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_key);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='sendAttachmentFile' and count(parameter)=2 and parameter[1][@type='byte[]'] and parameter[2][@type='java.lang.String']]"
		[Register ("sendAttachmentFile", "([BLjava/lang/String;)V", "")]
		public static unsafe void SendAttachmentFile (byte[] content, string mimeType)
		{
			const string __id = "sendAttachmentFile.([BLjava/lang/String;)V";
			IntPtr native_content = JNIEnv.NewArray (content);
			IntPtr native_mimeType = JNIEnv.NewString ((string)mimeType);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_content);
				__args [1] = new JniArgumentValue (native_mimeType);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				if (content != null) {
					JNIEnv.CopyArray (native_content, content);
					JNIEnv.DeleteLocalRef (native_content);
				}
				JNIEnv.DeleteLocalRef (native_mimeType);
				global::System.GC.KeepAlive (content);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='sendAttachmentFile' and count(parameter)=2 and parameter[1][@type='java.io.InputStream'] and parameter[2][@type='java.lang.String']]"
		[Register ("sendAttachmentFile", "(Ljava/io/InputStream;Ljava/lang/String;)V", "")]
		public static unsafe void SendAttachmentFile (global::System.IO.Stream inputStream, string mimeType)
		{
			const string __id = "sendAttachmentFile.(Ljava/io/InputStream;Ljava/lang/String;)V";
			IntPtr native_inputStream = global::Android.Runtime.InputStreamAdapter.ToLocalJniHandle (inputStream);
			IntPtr native_mimeType = JNIEnv.NewString ((string)mimeType);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_inputStream);
				__args [1] = new JniArgumentValue (native_mimeType);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_inputStream);
				JNIEnv.DeleteLocalRef (native_mimeType);
				global::System.GC.KeepAlive (inputStream);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='sendAttachmentFile' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("sendAttachmentFile", "(Ljava/lang/String;)V", "")]
		public static unsafe void SendAttachmentFile (string uri)
		{
			const string __id = "sendAttachmentFile.(Ljava/lang/String;)V";
			IntPtr native_uri = JNIEnv.NewString ((string)uri);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_uri);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_uri);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='sendAttachmentText' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("sendAttachmentText", "(Ljava/lang/String;)V", "")]
		public static unsafe void SendAttachmentText (string text)
		{
			const string __id = "sendAttachmentText.(Ljava/lang/String;)V";
			IntPtr native_text = JNIEnv.NewString ((string)text);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_text);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_text);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='setMParticleId' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("setMParticleId", "(Ljava/lang/String;)V", "")]
		public static unsafe void SetMParticleId (string id)
		{
			const string __id = "setMParticleId.(Ljava/lang/String;)V";
			IntPtr native_id = JNIEnv.NewString ((string)id);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_id);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_id);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='setPushNotificationIntegration' and count(parameter)=3 and parameter[1][@type='android.content.Context'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String']]"
		[Register ("setPushNotificationIntegration", "(Landroid/content/Context;ILjava/lang/String;)V", "")]
		public unsafe void SetPushNotificationIntegration (global::Android.Content.Context context, int pushProvider, string token)
		{
			const string __id = "setPushNotificationIntegration.(Landroid/content/Context;ILjava/lang/String;)V";
			IntPtr native_token = JNIEnv.NewString ((string)token);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue (pushProvider);
				__args [2] = new JniArgumentValue (native_token);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_token);
				global::System.GC.KeepAlive (context);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='showMessageCenter' and count(parameter)=0]"
		[Register ("showMessageCenter", "()V", "")]
		public static unsafe void ShowMessageCenter ()
		{
			const string __id = "showMessageCenter.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='showMessageCenter' and count(parameter)=1 and parameter[1][@type='java.util.Map&lt;java.lang.String, ? extends java.lang.Object&gt;']]"
		[Register ("showMessageCenter", "(Ljava/util/Map;)V", "")]
		public static unsafe void ShowMessageCenter (global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> customData)
		{
			const string __id = "showMessageCenter.(Ljava/util/Map;)V";
			IntPtr native_customData = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (customData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_customData);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_customData);
				global::System.GC.KeepAlive (customData);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='showMessageCenter' and count(parameter)=2 and parameter[1][@type='java.util.Map&lt;java.lang.String, ? extends java.lang.Object&gt;'] and parameter[2][@type='apptentive.com.android.feedback.EngagementCallback']]"
		[Register ("showMessageCenter", "(Ljava/util/Map;Lapptentive/com/android/feedback/EngagementCallback;)V", "")]
		public static unsafe void ShowMessageCenter (global::System.Collections.Generic.IDictionary<string, global::Java.Lang.Object> customData, global::ApptentiveKit.Android.IEngagementCallback @callback)
		{
			const string __id = "showMessageCenter.(Ljava/util/Map;Lapptentive/com/android/feedback/EngagementCallback;)V";
			IntPtr native_customData = global::Android.Runtime.JavaDictionary<string, global::Java.Lang.Object>.ToLocalJniHandle (customData);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_customData);
				__args [1] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				_members.StaticMethods.InvokeVoidMethod (__id, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_customData);
				global::System.GC.KeepAlive (customData);
				global::System.GC.KeepAlive (@callback);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='apptentive.com.android.feedback']/class[@name='Apptentive']/method[@name='unregisterApptentiveActivityInfoCallback' and count(parameter)=0]"
		[Register ("unregisterApptentiveActivityInfoCallback", "()V", "")]
		public static unsafe void UnregisterApptentiveActivityInfoCallback ()
		{
			const string __id = "unregisterApptentiveActivityInfoCallback.()V";
			try {
				_members.StaticMethods.InvokeVoidMethod (__id, null);
			} finally {
			}
		}

	}
}
