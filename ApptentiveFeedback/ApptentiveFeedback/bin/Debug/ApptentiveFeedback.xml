<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ApptentiveFeedback</name>
    </assembly>
    <members>
        <member name="M:ApptentiveKit.Apptentive.Register(Android.App.Application,ApptentiveKit.Android.ApptentiveConfiguration,System.Action{System.Boolean})">
            <summary>
            Registers the ApptentiveKit.Android SDK.
            </summary>
            <param name="application"> The main application.</param>
            <param name="configuration">The ApptentiveConfiguration object.</param>
            <param name="onCompletion">Called after successful or failed registration is conducted.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.RegisterActivityInfoCallback(ApptentiveKit.Android.IApptentiveActivityInfo)">
            <summary>
            Registers the current activity to the Apptentive SDK so that interactions can be displayed. 
            </summary>
            <param name="activity">The current activity of the application.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.UnregisterActivityInfoCallback">
            <summary>
            Unregisters the current activity from the Apptentive SDK.
            </summary>
        </member>
        <member name="M:ApptentiveKit.Apptentive.GetUnreadMessageCount">
            <summary>
            Gets the number of unread messages from MessageCenter.
            </summary>
            <returns>The numnber of unread messages.</returns>
        </member>
        <member name="M:ApptentiveKit.Apptentive.Engage(System.String,System.Collections.Generic.IDictionary{System.String,Java.Lang.Object},System.Action{System.Boolean})">
            <summary>
            This method takes a unique event of type [String], stores a record of that event having been visited, determines if there is an interaction that is able to run for this event, and then
            runs it. Only one interaction at most will run per invocation of this method. This task is performed asynchronously.
            </summary>
            <param name="onCompletion">Called after we check if a interaction can be presented or not.</param>
            <param name="customData">A Map of String keys to Object values. Objects may be Strings, Numbers, or Booleans.If any message is sent by the Person, this data is sent with it, and then cleared. If no message is sent, this data is discarded.</param>
            <param name="eventName">The event's string value</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.ShowMessageCenter(System.Action{System.Boolean},System.Collections.Generic.IDictionary{System.String,Java.Lang.Object})">
            <summary>
            Opens the Apptentive Message Center UI Activity, and allows custom data to be sent with the next message the user sends. If the user sends multiple messages, this data will only be sent
            with the first message sent after this method is invoked. Additional invocations of this method with custom data will repeat this process.
            If Message Center is closed without a message being sent, the custom data is cleared. This task is performed asynchronously. Message Center
            configuration may not have been downloaded yet when this is called.
            </summary>
            <param name="onCompletion">Called after we check to see if Message Center can be displayed, but before it is displayed.</param>
            <param name="customData">A Map of String keys to Object values. Objects may be Strings, Numbers, or Booleans.If any message is sent by the Person, this data is sent with it, and then cleared. If no message is sent, this data is discarded.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.CanShowMessageCenter(System.Action{System.Boolean})">
            <summary>
            Call this method to see whether or not Message Center can be displayed.
            This task is performed asynchronously.
            </summary>
            <param name="onCompletion">Called after we check to see if Message Center can be displayed, but before it is displayed. Called with true if an Interaction will be displayed, else false.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.SetPersonName(System.String)">
            <summary>
            Sets the user's name. This name will be sent to the Apptentive server and displayed in
            conversations you have with this person.This name will be the definitive username for this
            user, unless one is provided directly by the user through an Apptentive UI.
            </summary>
            <param name="name">The name of the user.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.GetPersonName">
            <summary>
            Retrieves the user's name.
            </summary>
            <returns>The user's name if set.</returns>
        </member>
        <member name="M:ApptentiveKit.Apptentive.SetPersonEmail(System.String)">
            <summary>
            Sets the user's email address. This email address will be sent to the Apptentive server to
            allow out of app communication, and to help provide more context about this user.This email
            will be the definitive email address for this user, unless one is provided directly by the
            user through an Apptentive UI.
            </summary>
            <param name="email">The email of the user.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.GetPersonEmail">
            <summary>
            Retrieves the user's email.
            </summary>
            <returns>The email of the user if set.</returns>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomPersonData(System.String,System.String)">
            <summary>
            Add a custom data String to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key">The key to store the data under.</param>
            <param name="value">A String value.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomPersonData(System.String,System.Int32)">
            <summary>
            Add a custom data int to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key">The key to store the data under.</param>
            <param name="value">A int value.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomPersonData(System.String,System.Boolean)">
            <summary>
            Add a custom data bool to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.RemoveCustomPersonData(System.String)">
            <summary>
            Remove a piece of custom data from the Person. 
            </summary>
            <param name="key">The key to remove.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomDeviceData(System.String,System.String)">
            <summary>
            Add a custom data String to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key">The key to store the data under.</param>
            <param name="value">A String value.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomDeviceData(System.String,System.Int32)">
            <summary>
            Add a custom data int to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key">The key to store the data under.</param>
            <param name="value">A int value.</param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.AddCustomDeviceData(System.String,System.Boolean)">
            <summary>
            Add a custom data bool to the Person. Custom data will be sent to the server, is displayed
            in the Conversation view, and can be used in Interaction targeting.
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:ApptentiveKit.Apptentive.RemoveCustomDeviceData(System.String)">
            <summary>
            Remove a piece of custom data from the device. Calls to this method are idempotent.
            </summary>
            <param name="key">The key to remove.</param>
        </member>
    </members>
</doc>
